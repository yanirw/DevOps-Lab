# Global Settings
gitRepoUrl: 'https://github.com/yanirw/DevOps-Lab'

# Projects Configuration
projects:
  monitoring:
    description: "Monitoring project for Prometheus and Grafana stack - Dev Environment"
    sourceRepos:
      - 'https://github.com/yanirw/DevOps-Lab'
      - 'https://prometheus-community.github.io/helm-charts'
    destinations:
      - namespace: monitoring
        server: https://kubernetes.default.svc
      - namespace: monitoring-test
        server: https://kubernetes.default.svc
      - namespace: '*'
        server: https://kubernetes.default.svc
    clusterResourceWhitelist:
      - group: apiextensions.k8s.io
        kind: CustomResourceDefinition
      - group: admissionregistration.k8s.io
        kind: ValidatingWebhookConfiguration
      - group: admissionregistration.k8s.io
        kind: MutatingWebhookConfiguration
      - group: rbac.authorization.k8s.io
        kind: ClusterRole
      - group: rbac.authorization.k8s.io
        kind: ClusterRoleBinding
      - group: monitoring.coreos.com
        kind: '*'
      - group: policy
        kind: PodSecurityPolicy
      - group: ""
        kind: Namespace
    namespaceResourceWhitelist:
      - group: '*'
        kind: '*'

  secrets:
    description: "Project for managing external secrets - Dev Environment"
    sourceRepos:
      - 'https://github.com/yanirw/DevOps-Lab'
    destinations:
      - namespace: external-secrets
        server: https://kubernetes.default.svc
      - namespace: '*'
        server: https://kubernetes.default.svc
    clusterResourceWhitelist:
      - group: apiextensions.k8s.io
        kind: CustomResourceDefinition
      - group: external-secrets.io
        kind: '*'

# Ingress Configuration
ingress:
  enabled: true
  className: "gce"
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "argocd-static-ip"
    networking.gke.io/managed-certificates: "argocd-cert"
    kubernetes.io/ingress.allow-http: "false"
  hosts:
    - host: argocd.yanirw.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

managedCertificate:
  enabled: true
  name: argocd-cert
  domains:
    - argocd.yanirw.com

service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  annotations: {}

backendConfig:
  enabled: true
  name: argocd-backend-config
  timeoutSec: 60
  connectionDraining:
    drainingTimeoutSec: 60

frontendConfig:
  enabled: true
  name: argocd-frontend-config
  sslPolicy: "modern" 